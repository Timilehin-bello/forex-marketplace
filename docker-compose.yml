services:
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: forex
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', '-q', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5

  user-auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ['/app/docker-entrypoint.sh']
    environment:
      - NODE_ENV=development
      - USER_AUTH_PORT=3001
      - USER_AUTH_GRPC_PORT=5013
      - SERVICE_NAME=user-auth-service
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=forex
      - JWT_SECRET=your_jwt_secret_key
      - JWT_EXPIRES_IN=7d
      - USER_GRPC_URL=0.0.0.0:5013
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      # Admin user credentials
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@forex-marketplace.com}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-Admin@123456}
      - ADMIN_FIRSTNAME=${ADMIN_FIRSTNAME:-Super}
      - ADMIN_LASTNAME=${ADMIN_LASTNAME:-Admin}
    ports:
      - '3001:3001'
      - '5013:5013'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./libs/grpc/src/lib/protos:/app/libs/grpc/src/lib/protos
      - ./docker-entrypoint.sh:/app/docker-entrypoint.sh

  wallet-service:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ['/app/docker-entrypoint.sh']
    environment:
      - NODE_ENV=development
      - WALLET_PORT=3002
      - WALLET_GRPC_PORT=5002
      - SERVICE_NAME=wallet-service
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=forex
      - JWT_SECRET=your_jwt_secret_key
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - WALLET_GRPC_URL=0.0.0.0:5002
      - USER_GRPC_URL=user-auth-service:5013
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - '3002:3002'
      - '5002:5002'
    volumes:
      - ./libs/grpc/src/lib/protos:/app/libs/grpc/src/lib/protos
      - ./docker-entrypoint.sh:/app/docker-entrypoint.sh
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy

  rate-service:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ['/app/docker-entrypoint.sh']
    environment:
      - NODE_ENV=development
      - RATE_PORT=3003
      - RATE_GRPC_PORT=5011
      - SERVICE_NAME=rate-service
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=forex
      - EXCHANGE_RATE_API_KEY=${EXCHANGE_RATE_API_KEY}
      - RATE_GRPC_URL=0.0.0.0:5011
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - '3003:3003'
      - '5011:5011'
    volumes:
      - ./libs/grpc/src/lib/protos:/app/libs/grpc/src/lib/protos
      - ./docker-entrypoint.sh:/app/docker-entrypoint.sh
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  transaction-service:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ['/app/docker-entrypoint.sh']
    environment:
      - NODE_ENV=development
      - TRANSACTION_PORT=3014
      - TRANSACTION_GRPC_PORT=5014
      - SERVICE_NAME=transaction-service
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=forex
      - JWT_SECRET=your_jwt_secret_key
      - RATE_GRPC_URL=rate-service:5011
      - WALLET_GRPC_URL=wallet-service:5002
      - USER_GRPC_URL=user-auth-service:5013
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - '3014:3014'
      - '5014:5014'
    volumes:
      - ./libs/grpc/src/lib/protos:/app/libs/grpc/src/lib/protos
      - ./docker-entrypoint.sh:/app/docker-entrypoint.sh
    depends_on:
      - rate-service
      - wallet-service
      - user-auth-service
      - redis

  notification-service:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ['/app/docker-entrypoint.sh']
    environment:
      - NODE_ENV=development
      - NOTIFICATION_PORT=3006
      - NOTIFICATION_GRPC_PORT=5006
      - SERVICE_NAME=notification-service
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=forex
      - JWT_SECRET=your_jwt_secret_key
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - USER_GRPC_URL=user-auth-service:5013
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - EMAIL_FROM=noreply@forex-platform.com
      # For production, add SMTP settings:
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SECURE=false
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
    ports:
      - '3006:3006'
      - '5006:5006'
    volumes:
      - ./libs/grpc/src/lib/protos:/app/libs/grpc/src/lib/protos
      - ./docker-entrypoint.sh:/app/docker-entrypoint.sh
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
